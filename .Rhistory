# caculate time for landfll
dt<-lubridate::with_tz(lubridate::ymd_hms(format(Landfall_check$date[1], format="%Y-%m-%d %H:%M:%S"),tz="UTC"), tz="Asia/Manila")
dt1<-lubridate::with_tz(lubridate::ymd_hm(format(TRACK_DATA$YYYYMMDDHH[1], format="%Y%m%d%H%M"),tz="UTC"), tz="Asia/Manila")
dt2<-lubridate::with_tz(lubridate::ymd_hm(format(Sys.time(), format="%Y%m%d%H%M"),tz="CEST"), tz="Asia/Manila")
dt2=lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
time_for_landfall<- as.numeric(difftime(dt,dt1,units="hours"))
etimated_landfall_time<-dt
}
return(c(Landfall_point,time_for_landfall,etimated_landfall_time))
}
run_prediction_model<-function(data){
########## run prediction ##########
rm.predict.pr <- predict(mode_classification, data = data, predict.all = FALSE, num.trees = mode_classification$num.trees, type = "response",
se.method = "infjack", quantiles = c(0.1, 0.5, 0.9), seed = NULL, num.threads = NULL, verbose = TRUE)
FORECASTED_IMPACT<-as.data.frame(rm.predict.pr$predictions) %>%
dplyr::mutate(index= 1:length(rm.predict.pr$predictions),impact_threshold_passed=rm.predict.pr$predictions) %>%
left_join(data , by = "index") %>%
dplyr::select(GEN_mun_code,impact_threshold_passed,WEA_dist_track)
#colnames(FORECASTED_IMPACT) <- c(GEN_mun_code,paste0(TYF,'_impact_threshold_passed'),WEA_dist_track)
rm.predict.pr <- predict(mode_continious, data = data, predict.all = FALSE, num.trees = mode_continious$num.trees, type = "response",
se.method = "infjack", quantiles = c(0.1, 0.5, 0.9), seed = NULL, num.threads = NULL, verbose = TRUE)
FORECASTED_IMPACT_rr<-as.data.frame(rm.predict.pr$predictions) %>%
dplyr::mutate(index= 1:length(rm.predict.pr$predictions),impact=rm.predict.pr$predictions) %>%
dplyr::mutate(priority_index=ntile_na(ifelse(impact<0,NA,impact),5))%>%
left_join(data , by = "index") %>%
dplyr::select(GEN_mun_code,impact,priority_index)
df_imact_forecast<-FORECASTED_IMPACT %>% left_join(FORECASTED_IMPACT_rr,by='GEN_mun_code')
#colnames(FORECASTED_IMPACT_rr) <- c(GEN_mun_code,paste0(TYF,'_impact'),paste0(TYF,'_priority_index'))
return(df_imact_forecast)
}
Make_maps<-function(php_admin1,php_admin3_,my_track,TYF,Typhoon_stormname){
################################### Make maps #########
Landfall_check <- st_intersection(php_admin1, my_track)
Landfall_point<-Landfall_check[1,]
#######################################################################
# caculate time for landfll
dt<-lubridate::with_tz(lubridate::ymd_hms(format(Landfall_check$date[1], format="%Y-%m-%d %H:%M:%S"),tz="UTC"), tz="Asia/Manila")
dt1<-lubridate::with_tz(lubridate::ymd_hm(format(TRACK_DATA$YYYYMMDDHH[1], format="%Y%m%d%H%M"),tz="UTC"), tz="Asia/Manila")
dt2<-lubridate::with_tz(lubridate::ymd_hm(format(Sys.time(), format="%Y%m%d%H%M"),tz="CEST"), tz="Asia/Manila")
dt2=lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
time_for_landfall<- as.numeric(difftime(dt,dt1,units="hours"))
etimated_landfall_time<-dt
php_admin4 <- php_admin3_ %>%  dplyr::mutate(dam_perc_comp_prediction_lm_quantile = ntile_na(impact,5)) %>% filter(WEA_dist_track < 300)
region2<-extent(php_admin4)
#php_admin3_<-php_admin3_ %>% arrange(WEA_dist_track)
#region<- st_bbox(php_admin3[1,])
#typhoon_region = st_bbox(c(xmin = region[["xmin"]]-2, xmax = 2+region[["xmax"]],  ymin = region[["ymin"]]-2, ymax =2+ region[["ymax"]]),     crs = st_crs(php_admin1)) %>% st_as_sfc()
typhoon_region = st_bbox(c(xmin =as.vector(region2@xmin), xmax = as.vector(region2@xmax),
ymin = as.vector(region2@ymin), ymax =as.vector(region2@ymax)),
crs = st_crs(php_admin1)) %>% st_as_sfc()
UCL_track <- st_read(dsn=paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_',forecast_time,'_track.gpkg'),layer='UCL')
HK_track <- st_read(dsn=paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_',forecast_time,'_track.gpkg'),layer='HK')
ECMWF_track <- st_read(dsn=paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_',forecast_time,'_track.gpkg'),layer='ECMWF')
JTCW_track <- st_read(dsn=paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_',forecast_time,'_track.gpkg'),layer='JTCW')
model_run_time<-lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
subtitle =paste0("Predicted damage per Municipality for ", Typhoon_stormname,'\n',
"Impact map generated at:",model_run_time,'\n',
"Source of wind speed forecast (UCL,ECMWF)",'\n',
"Only Areas within 100km of forecasted track are included",'\n',
"Prediction is about completely damaged houses only",'\n',
'Expected Landfall at : ',dt,' PST in (',time_for_landfall,' hrs)')
tmap_mode(mode = "plot")
impact_map=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) + #,style = "cat")+
tm_borders(col = NA, lwd = .25, lty = "solid", alpha = .25, group = NA) +
tm_shape(world3) + tm_symbols(col='Agency',size=0.1,border.alpha = .25) +
#tm_layout(legend.show = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
tm_shape(Landfall_point) + tm_symbols(size=0.25,border.alpha = .25,col="red") +
tm_compass(type = "8star", position = c("right", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), text.size = .5,
color.light = "#f0f0f0",
position = c(0,.1))+
tm_credits("The maps used do not imply the expression of any opinion on the part of the International Federation of the Red Cross and Red Crescent Societies\n concerning the legal status of a territory or of its authorities.",
position = c("left", "BOTTOM"),size = 0.6) #+    tm_layout(legend.show = TRUE)#legend.outside= TRUE,            legend.outside.position=c("left"),            inner.margins=c(.01,.04, .02, .01),            main.title=subtitle, main.title.size=.8,asp=.8)
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(world3) + tm_symbols(col='Agency',size=0.1,border.alpha = .25) +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
ph_map = tm_shape(php_admin1) + tm_polygons(border.col = "black",lwd = 0.1,lyt='dotted',alpha =0.2) +
tm_shape(typhoon_region) + tm_borders(lwd = 2,col='red') +
#tm_credits("The maps used do not imply \nthe expression of any opinion on \nthe part of the International Federation\n of the Red Cross and Red Crescent Societies\n concerning the legal status of a\n territory or of its authorities.",
# position = c("left", "BOTTOM"),size = 0.9) +
tm_layout(legend.show = FALSE)#inner.margins=c(.04,.03, .04, .04))
#inner.margins=c(.04,.03, .02, .01),
ph_map2 = tm_shape(php_admin1)+ tm_polygons(border.col = "white",lwd = 0.01,lyt='dotted',alpha =0.2) +
#tm_shape(typhoon_region) +# tm_borders(lwd = 2,col='red') +
tm_credits( subtitle,position = c("left", "top"),size = 0.7) +
tm_logo('https://www.510.global/wp-content/uploads/2017/07/510-LOGO-WEBSITE-01.png',
height=2, position = c("right", "top"))+
tm_layout(legend.show = FALSE)
map1<- tmap_arrange(ph_map,ph_map2,impact_map2,impact_map,nrow=2,ncol = 2,widths = c(.3, .7),heights = c(.3, .7))
return(map1)
}
dir.create(file.path(paste0(main_directory,'typhoon_infographic/shapes/', Typhoon_stormname)), showWarnings = FALSE)
typhoon_events<-c(UCL_directory,ECMWF_directory,HK_directory,JTCW_directory)
ftrack_geodb=paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_',forecast_time,'_track.gpkg')
if (file.exists(ftrack_geodb)){ file.remove(ftrack_geodb)}
tc_tracks = st_read(ftrack_geodb)
View(tc_tracks)
if (!is.null(typhoon_events)) {
for(forecaster in (typhoon_events)){
if (grepl('UCL_20', forecaster, fixed = TRUE)) {
TYF= 'UCL'
} else if (grepl('ECMWF_20', forecaster, fixed = TRUE)) {
TYF= 'ECMWF'
} else if  (grepl('HK_20', forecaster, fixed = TRUE)) {
TYF= 'HK'
} else if  (grepl('JTCW_20', forecaster, fixed = TRUE)) {
TYF= 'JTCW'
}else {
TYF= 'NA'
}
TRACK_DATA<- read.csv(forecaster ) #track data from UCL is in MPH
my_track <- track_interpolation(TRACK_DATA)
####################################################################################################
# check if there is a landfall
print("chincking landfall")
Landfall_check <- st_intersection(php_admin1, my_track)
if (nrow(Landfall_check) > 0){
print("claculating data")
new_data<-Model_input_processing(TRACK_DATA,my_track,TYF,Typhoon_stormname)
####################################################################################################
print("running modesl")
FORECASTED_IMPACT<-run_prediction_model(data=new_data)
php_admin3<-php_admin3 %>% mutate(GEN_mun_code=adm3_pcode) %>%  left_join(FORECASTED_IMPACT,by="GEN_mun_code")
php_admin3_<-php_admin3 %>% dplyr::arrange(WEA_dist_track) %>%
dplyr::mutate(impact=ifelse(WEA_dist_track> 100,NA,impact),
impact_threshold_passed =ifelse(WEA_dist_track > 100,NA,impact_threshold_passed))
Impact<-php_admin3_  %>%   dplyr::select(GEN_mun_code,impact,impact_threshold_passed,WEA_dist_track) %>% st_set_geometry(NULL)
php_admin4 <- php_admin3_ %>%  dplyr::mutate(dam_perc_comp_prediction_lm_quantile = ntile_na(impact,5)) %>% filter(WEA_dist_track < 300)
region2<-extent(php_admin4)
#php_admin3_<-php_admin3_ %>% arrange(WEA_dist_track)
#region<- st_bbox(php_admin3[1,])
#typhoon_region = st_bbox(c(xmin = region[["xmin"]]-2, xmax = 2+region[["xmax"]],  ymin = region[["ymin"]]-2, ymax =2+ region[["ymax"]]),     crs = st_crs(php_admin1)) %>% st_as_sfc()
typhoon_region = st_bbox(c(xmin =as.vector(region2@xmin), xmax = as.vector(region2@xmax),
ymin = as.vector(region2@ymin), ymax =as.vector(region2@ymax)),
crs = st_crs(php_admin1)) %>% st_as_sfc()
#Impact2<-php_admin3 %>%  left_join(Impact %>% mutate(imp_thr=impact_threshold_passed,adm3_pcode=GEN_mun_code)%>% dplyr::select(adm3_pcode,impact,imp_thr),by = "adm3_pcode")
st_write(obj = php_admin4,
dsn = paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_',forecast_time,'_impact.gpkg'),
layer =TYF,
update = TRUE)
Landfall_point<-Check_landfall_time(php_admin1, my_track)[1]
time_for_landfall<- Check_landfall_time(php_admin1, my_track)[2]
etimated_landfall_time<- Check_landfall_time(php_admin1, my_track)[3]
####################################################################################################
print("make mapsl")
#call map function
map1<-Make_maps(php_admin1,php_admin3_,my_track,TYF,Typhoon_stormname)
tmap_save(map1,
filename = paste0(main_directory,'forecast/',Typhoon_stormname,'/Impact_',TYF,'_',forecast_time,'_',  Typhoon_stormname,'.png'),
width=20, height=24,dpi=600,
units="cm")
####################################################################################################
# ------------------------ save to file   -----------------------------------
## save an image ("plot" mode) paste0(main_directory,'fbf/forecast/Impact_',  as.character(typhoon_events$event[i]),'.png')),
write.csv(Impact, file = paste0(main_directory,'forecast/',Typhoon_stormname,'/Impact_', TYF,'_',forecast_time,'_' ,Typhoon_stormname,'.csv'))
#paste0('home/fbf/forecast/Impact_',as.vector(TRACK_DATA[1,]$YYYYMMDDHH),'_',as.vector(TRACK_DATA[1,]$STORMNAME),'.csv'))
file_names<- c(paste0(main_directory,'forecast/',Typhoon_stormname,'/Impact_',TYF,'_',forecast_time,'_',  Typhoon_stormname,'.png'),
paste0(main_directory,'forecast/',Typhoon_stormname,'/Impact_',TYF,'_',forecast_time,'_', Typhoon_stormname,'.csv'))
# paste0('home/fbf/forecast/Impact_',as.vector(TRACK_DATA[1,]$YYYYMMDDHH),'_',as.vector(TRACK_DATA[1,]$STORMNAME),'.png'),
# paste0('home/fbf/forecast/Impact_',as.vector(TRACK_DATA[1,]$YYYYMMDDHH),'_',as.vector(TRACK_DATA[1,]$STORMNAME),'.csv'))
write.table(file_names, file =paste0(main_directory, 'forecast/',Typhoon_stormname,'_',forecast_time,'_file_names.csv'),append=TRUE, col.names = FALSE)
}
else{
file_names<- c(paste0('Nolandfall','_',Typhoon_stormname,'.png'),
paste0('Nolandfall','_',Typhoon_stormname,'.csv'))
write.table(file_names, file =paste0(main_directory, 'forecast/',Typhoon_stormname,'_',forecast_time,'_file_names.csv'),append=TRUE, col.names = FALSE)
}
}
}
Landfall_check <- st_intersection(php_admin1, my_track)
Landfall_point<-Landfall_check[1,]
dt<-lubridate::with_tz(lubridate::ymd_hms(format(Landfall_check$date[1], format="%Y-%m-%d %H:%M:%S"),tz="UTC"), tz="Asia/Manila")
dt1<-lubridate::with_tz(lubridate::ymd_hm(format(TRACK_DATA$YYYYMMDDHH[1], format="%Y%m%d%H%M"),tz="UTC"), tz="Asia/Manila")
dt2<-lubridate::with_tz(lubridate::ymd_hm(format(Sys.time(), format="%Y%m%d%H%M"),tz="CEST"), tz="Asia/Manila")
dt2=lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
time_for_landfall<- as.numeric(difftime(dt,dt1,units="hours"))
etimated_landfall_time<-dt
php_admin4 <- php_admin3_ %>%  dplyr::mutate(dam_perc_comp_prediction_lm_quantile = ntile_na(impact,5)) %>% filter(WEA_dist_track < 300)
region2<-extent(php_admin4)
typhoon_region = st_bbox(c(xmin =as.vector(region2@xmin), xmax = as.vector(region2@xmax),
ymin = as.vector(region2@ymin), ymax =as.vector(region2@ymax)),
crs = st_crs(php_admin1)) %>% st_as_sfc()
model_run_time<-lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
subtitle =paste0("Predicted damage per Municipality for ", Typhoon_stormname,'\n',
"Impact map generated at:",model_run_time,'\n',
"Source of wind speed forecast (UCL,ECMWF)",'\n',
"Only Areas within 100km of forecasted track are included",'\n',
"Prediction is about completely damaged houses only",'\n',
'Expected Landfall at : ',dt,' PST in (',time_for_landfall,' hrs)')
impact_map=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) + #,style = "cat")+
tm_borders(col = NA, lwd = .25, lty = "solid", alpha = .25, group = NA) +
tm_shape(tc_tracks) + tm_symbols(col='Agency',size=0.1,border.alpha = .25) +
#tm_layout(legend.show = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
tm_shape(Landfall_point) + tm_symbols(size=0.25,border.alpha = .25,col="red") +
tm_compass(type = "8star", position = c("right", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), text.size = .5,
color.light = "#f0f0f0",
position = c(0,.1))+
tm_credits("The maps used do not imply the expression of any opinion on the part of the International Federation of the Red Cross and Red Crescent Societies\n concerning the legal status of a territory or of its authorities.",
position = c("left", "BOTTOM"),size = 0.6) #+    tm_layout(legend.show = TRUE)#legend.outside= TRUE,            legend.outside.position=c("left"),            inner.margins=c(.01,.04, .02, .01),            main.title=subtitle, main.title.size=.8,asp=.8)
impact_map
tmap_mode(mode = "plot")
impact_map=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) + #,style = "cat")+
tm_borders(col = NA, lwd = .25, lty = "solid", alpha = .25, group = NA) +
tm_shape(tc_tracks) + tm_symbols(col='Agency',size=0.1,border.alpha = .25) +
#tm_layout(legend.show = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
tm_shape(Landfall_point) + tm_symbols(size=0.25,border.alpha = .25,col="red") +
tm_compass(type = "8star", position = c("right", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), text.size = .5,
color.light = "#f0f0f0",
position = c(0,.1))+
tm_credits("The maps used do not imply the expression of any opinion on the part of the International Federation of the Red Cross and Red Crescent Societies\n concerning the legal status of a territory or of its authorities.",
position = c("left", "BOTTOM"),size = 0.6) +
tm_layout(legend.show = FALSE)#legend.outside= TRUE,            legend.outside.position=c("left"),            inner.margins=c(.01,.04, .02, .01),            main.title=subtitle, main.title.size=.8,asp=.8)
impact_map
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(tc_tracks) + tm_symbols(col='Agency',size=0.1,border.alpha = .25) +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
impact_map2
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(tc_tracks) + tm_symbols(col='Agency',size=0.1,border.alpha = .25,title='TC Track data Provider') +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(tc_tracks) + tm_symbols(col='Agency',size=0.1,border.alpha = .25,legend.title='TC Track data Provider') +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
View(tc_tracks)
ftrack_geodb=paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'1_',forecast_time,'_track.gpkg')
if (file.exists(ftrack_geodb)){ file.remove(ftrack_geodb)}
if (!is.null(typhoon_events)) {
for(forecaster in (typhoon_events)){
if (grepl('UCL_20', forecaster, fixed = TRUE)) {
TYF= 'UCL'
} else if (grepl('ECMWF_20', forecaster, fixed = TRUE)) {
TYF= 'ECMWF'
} else if  (grepl('HK_20', forecaster, fixed = TRUE)) {
TYF= 'HK'
} else if  (grepl('JTCW_20', forecaster, fixed = TRUE)) {
TYF= 'JTCW'
}else {
TYF= 'NA'
}
TRACK_DATA<- read.csv(forecaster ) #track data from UCL is in MPH
my_track <- track_interpolation(TRACK_DATA) %>% dplyr::mutate(data_Provider=TYF)
st_write(obj = my_track,
dsn = paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'1_',forecast_time,'_track.gpkg'),
layer ='tc_tracks',
append = TRUE)
}
}
tc_tracks = st_read(ftrack_geodb)
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(tc_tracks) + tm_symbols(col='data_Provider',size=0.1,border.alpha = .25) +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
impact_map2
ftrack_geodb=paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'1_',forecast_time,'_track.gpkg')
if (file.exists(ftrack_geodb)){ file.remove(ftrack_geodb)}
if (!is.null(typhoon_events)) {
for(forecaster in (typhoon_events)){
if (grepl('UCL_20', forecaster, fixed = TRUE)) {
TYF= 'UCL'
} else if (grepl('ECMWF_20', forecaster, fixed = TRUE)) {
TYF= 'ECMWF'
} else if  (grepl('HK_20', forecaster, fixed = TRUE)) {
TYF= 'HK'
} else if  (grepl('JTCW_20', forecaster, fixed = TRUE)) {
TYF= 'JTCW'
}else {
TYF= 'NA'
}
TRACK_DATA<- read.csv(forecaster ) #track data from UCL is in MPH
my_track <- track_interpolation(TRACK_DATA) %>% dplyr::mutate(Data_Provider=TYF)
st_write(obj = my_track,
dsn = paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'1_',forecast_time,'_track.gpkg'),
layer ='tc_tracks',
append = TRUE)
}
}
tc_tracks = st_read(ftrack_geodb)
tmap_mode(mode = "plot")
impact_map=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) + #,style = "cat")+
tm_borders(col = NA, lwd = .25, lty = "solid", alpha = .25, group = NA) +
tm_shape(tc_tracks) + tm_symbols(col='Data_Provider',size=0.1,border.alpha = .25) +
#tm_layout(legend.show = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
tm_shape(Landfall_point) + tm_symbols(size=0.25,border.alpha = .25,col="red") +
tm_compass(type = "8star", position = c("right", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), text.size = .5,
color.light = "#f0f0f0",
position = c(0,.1))+
tm_credits("The maps used do not imply the expression of any opinion on the part of the International Federation of the \nRed Cross and Red Crescent Societies concerning the legal status of a territory or of its authorities.",
position = c("left", "BOTTOM"),size = 0.6) +
tm_layout(legend.show = FALSE)#legend.outside= TRUE,            legend.outside.position=c("left"),            inner.margins=c(.01,.04, .02, .01),            main.title=subtitle, main.title.size=.8,asp=.8)
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(tc_tracks) + tm_symbols(col='Data_Provider',size=0.1,border.alpha = .25) +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
ph_map = tm_shape(php_admin1) + tm_polygons(border.col = "black",lwd = 0.1,lyt='dotted',alpha =0.2) +
tm_shape(typhoon_region) + tm_borders(lwd = 2,col='red') +
#tm_credits("The maps used do not imply \nthe expression of any opinion on \nthe part of the International Federation\n of the Red Cross and Red Crescent Societies\n concerning the legal status of a\n territory or of its authorities.",
# position = c("left", "BOTTOM"),size = 0.9) +
tm_layout(legend.show = FALSE)#inner.margins=c(.04,.03, .04, .04))
ph_map2 = tm_shape(php_admin1)+ tm_polygons(border.col = "white",lwd = 0.01,lyt='dotted',alpha =0.2) +
#tm_shape(typhoon_region) +# tm_borders(lwd = 2,col='red') +
tm_credits( subtitle,position = c("left", "top"),size = 0.7) +
tm_logo('https://www.510.global/wp-content/uploads/2017/07/510-LOGO-WEBSITE-01.png',
height=2, position = c("right", "top"))+
tm_layout(legend.show = FALSE)
map1<- tmap_arrange(ph_map,ph_map2,impact_map2,impact_map,nrow=2,ncol = 2,widths = c(.3, .7),heights = c(.3, .7))
map1
ph_map2 = tm_shape(php_admin1)+ tm_polygons(border.col = "white",lwd = 0.01,lyt='dotted',alpha =0.2) +
#tm_shape(typhoon_region) +# tm_borders(lwd = 2,col='red') +
tm_credits( subtitle,position = c("left", "top"),size = 0.7) +
tm_logo('combined_logo.png',#https://www.510.global/wp-content/uploads/2017/07/510-LOGO-WEBSITE-01.png',
height=2, position = c("right", "top"))+
tm_layout(legend.show = FALSE)
map1<- tmap_arrange(ph_map,ph_map2,impact_map2,impact_map,nrow=2,ncol = 2,widths = c(.3, .7),heights = c(.3, .7))
map1
ph_map2 = tm_shape(php_admin1)+ tm_polygons(border.col = "white",lwd = 0.01,lyt='dotted',alpha =0.2) +
#tm_shape(typhoon_region) +# tm_borders(lwd = 2,col='red') +
tm_credits( subtitle,position = c("left", "top"),size = 0.7) +
tm_logo('combined_logo.png',#https://www.510.global/wp-content/uploads/2017/07/510-LOGO-WEBSITE-01.png',
height=3, position = c("right", "top"))+
tm_layout(legend.show = FALSE)
ph_map2
map1<- tmap_arrange(ph_map,ph_map2,impact_map2,impact_map,nrow=2,ncol = 2,widths = c(.3, .7),heights = c(.3, .7))
map1
tmap_save(map1,
filename = paste0(main_directory,'forecast/',Typhoon_stormname,'/Impact_',TYF,'_',forecast_time,'_',  Typhoon_stormname,'.png'),
width=20, height=24,dpi=600,
units="cm")
Landfall_check <- st_intersection(php_admin1, my_track)
Landfall_point<-Landfall_check[1,]
dt<-lubridate::with_tz(lubridate::ymd_hms(format(Landfall_check$date[1], format="%Y-%m-%d %H:%M:%S"),tz="UTC"), tz="Asia/Manila")
dt1<-lubridate::with_tz(lubridate::ymd_hm(format(TRACK_DATA$YYYYMMDDHH[1], format="%Y%m%d%H%M"),tz="UTC"), tz="Asia/Manila")
dt2<-lubridate::with_tz(lubridate::ymd_hm(format(Sys.time(), format="%Y%m%d%H%M"),tz="CEST"), tz="Asia/Manila")
dt2=lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
time_for_landfall<- as.numeric(difftime(dt,dt1,units="hours"))
etimated_landfall_time<-dt
php_admin4 <- php_admin3_ %>%  dplyr::mutate(dam_perc_comp_prediction_lm_quantile = ntile_na(impact,5)) %>% filter(WEA_dist_track < 300)
region2<-extent(php_admin4)
typhoon_region = st_bbox(c(xmin =as.vector(region2@xmin), xmax = as.vector(region2@xmax),
ymin = as.vector(region2@ymin), ymax =as.vector(region2@ymax)),
crs = st_crs(php_admin1)) %>% st_as_sfc()
model_run_time<-lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
subtitle =paste0("Predicted damage per Municipality for ", Typhoon_stormname,'\n',
"Impact map generated at:",model_run_time,'\n',
"Source of wind speed forecast ",TYF,'\n',
"Only Areas within 100km of forecasted track are included",'\n',
"Prediction is about completely damaged houses only",'\n',
'Expected Landfall at : ',dt,' PST in (',time_for_landfall,' hrs)')
tmap_mode(mode = "plot")
impact_map=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) + #,style = "cat")+
tm_borders(col = NA, lwd = .25, lty = "solid", alpha = .25, group = NA) +
tm_shape(tc_tracks) + tm_symbols(col='Data_Provider',size=0.1,border.alpha = .25) +
#tm_layout(legend.show = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
tm_shape(Landfall_point) + tm_symbols(size=0.25,border.alpha = .25,col="red") +
tm_compass(type = "8star", position = c("right", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), text.size = .5,
color.light = "#f0f0f0",
position = c(0,.1))+
tm_credits("The maps used do not imply the expression of any opinion on the part of the International Federation of the \nRed Cross and Red Crescent Societies concerning the legal status of a territory or of its authorities.",
position = c("left", "BOTTOM"),size = 0.6) +
tm_layout(legend.show = FALSE)#legend.outside= TRUE,            legend.outside.position=c("left"),            inner.margins=c(.01,.04, .02, .01),            main.title=subtitle, main.title.size=.8,asp=.8)
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(tc_tracks) + tm_symbols(col='Data_Provider',size=0.1,border.alpha = .25) +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
ph_map = tm_shape(php_admin1) + tm_polygons(border.col = "black",lwd = 0.1,lyt='dotted',alpha =0.2) +
tm_shape(typhoon_region) + tm_borders(lwd = 2,col='red') +
#tm_credits("The maps used do not imply \nthe expression of any opinion on \nthe part of the International Federation\n of the Red Cross and Red Crescent Societies\n concerning the legal status of a\n territory or of its authorities.",
# position = c("left", "BOTTOM"),size = 0.9) +
tm_layout(legend.show = FALSE)#inner.margins=c(.04,.03, .04, .04))
ph_map2 = tm_shape(php_admin1)+ tm_polygons(border.col = "white",lwd = 0.01,lyt='dotted',alpha =0.2) +
#tm_shape(typhoon_region) +# tm_borders(lwd = 2,col='red') +
tm_credits( subtitle,position = c("left", "top"),size = 0.7) +
tm_logo('combined_logo.png',#https://www.510.global/wp-content/uploads/2017/07/510-LOGO-WEBSITE-01.png',
height=3, position = c("right", "top"))+
tm_layout(legend.show = FALSE)
map1<- tmap_arrange(ph_map,ph_map2,impact_map2,impact_map,nrow=2,ncol = 2,widths = c(.3, .7),heights = c(.3, .7))
map1
map1<- tmap_arrange(ph_map,ph_map2,impact_map2,impact_map,nrow=2,ncol = 2,widths = c(.3, .7),heights = c(.3, .7))
map1<-Make_maps(php_admin1,php_admin3_,my_track,tc_tracks,TYF,Typhoon_stormname)
Make_maps<-function(php_admin1,php_admin3_,my_track,tc_tracks,TYF,Typhoon_stormname){
################################### Make maps #########
Landfall_check <- st_intersection(php_admin1, my_track)
Landfall_point<-Landfall_check[1,]
#######################################################################
# caculate time for landfll
dt<-lubridate::with_tz(lubridate::ymd_hms(format(Landfall_check$date[1], format="%Y-%m-%d %H:%M:%S"),tz="UTC"), tz="Asia/Manila")
dt1<-lubridate::with_tz(lubridate::ymd_hm(format(TRACK_DATA$YYYYMMDDHH[1], format="%Y%m%d%H%M"),tz="UTC"), tz="Asia/Manila")
dt2<-lubridate::with_tz(lubridate::ymd_hm(format(Sys.time(), format="%Y%m%d%H%M"),tz="CEST"), tz="Asia/Manila")
dt2=lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
time_for_landfall<- as.numeric(difftime(dt,dt1,units="hours"))
etimated_landfall_time<-dt
php_admin4 <- php_admin3_ %>%  dplyr::mutate(dam_perc_comp_prediction_lm_quantile = ntile_na(impact,5)) %>% filter(WEA_dist_track < 300)
region2<-extent(php_admin4)
#php_admin3_<-php_admin3_ %>% arrange(WEA_dist_track)
#region<- st_bbox(php_admin3[1,])
#typhoon_region = st_bbox(c(xmin = region[["xmin"]]-2, xmax = 2+region[["xmax"]],  ymin = region[["ymin"]]-2, ymax =2+ region[["ymax"]]),     crs = st_crs(php_admin1)) %>% st_as_sfc()
typhoon_region = st_bbox(c(xmin =as.vector(region2@xmin), xmax = as.vector(region2@xmax),
ymin = as.vector(region2@ymin), ymax =as.vector(region2@ymax)),
crs = st_crs(php_admin1)) %>% st_as_sfc()
model_run_time<-lubridate::with_tz(lubridate::force_tz(Sys.time()), tz="Asia/Manila")
subtitle =paste0("Predicted damage per Municipality for ", Typhoon_stormname,'\n',
"Impact map generated at:",model_run_time,'\n',
"Source of wind speed forecast ",TYF,'\n',
"Only Areas within 100km of forecasted track are included",'\n',
"Prediction is about completely damaged houses only",'\n',
'Expected Landfall at : ',dt,' PST in (',time_for_landfall,' hrs)')
tmap_mode(mode = "plot")
impact_map=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) + #,style = "cat")+
tm_borders(col = NA, lwd = .25, lty = "solid", alpha = .25, group = NA) +
tm_shape(tc_tracks) + tm_symbols(col='Data_Provider',size=0.1,border.alpha = .25) +
#tm_layout(legend.show = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
tm_shape(Landfall_point) + tm_symbols(size=0.25,border.alpha = .25,col="red") +
tm_compass(type = "8star", position = c("right", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), text.size = .5,
color.light = "#f0f0f0",
position = c(0,.1))+
tm_credits("The maps used do not imply the expression of any opinion on the part of the International Federation of the \nRed Cross and Red Crescent Societies concerning the legal status of a territory or of its authorities.",
position = c("left", "BOTTOM"),size = 0.6) +
tm_layout(legend.show = FALSE)#legend.outside= TRUE,            legend.outside.position=c("left"),            inner.margins=c(.01,.04, .02, .01),            main.title=subtitle, main.title.size=.8,asp=.8)
impact_map2=tm_shape(php_admin4) +
tm_fill(col = "impact",showNA=FALSE, border.col = "black",lwd = 3,lyt='dotted',
breaks = c(0,0.1,1,2,5,9.5,10),
title='Predicted % of Damaged ',
labels=c(' No Damage',' < 1%',' 1 to 2%',' 2 to 5%',' 5 to 10%',' > 10%'),
palette = c('#ffffff','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603')) +
tm_shape(tc_tracks) + tm_symbols(col='Data_Provider',size=0.1,border.alpha = .25) +
tm_layout(legend.only = TRUE, legend.position=c("left", "top"))#, main.title=subtitle, main.title.size=.8,asp=.8)
ph_map = tm_shape(php_admin1) + tm_polygons(border.col = "black",lwd = 0.1,lyt='dotted',alpha =0.2) +
tm_shape(typhoon_region) + tm_borders(lwd = 2,col='red') +
#tm_credits("The maps used do not imply \nthe expression of any opinion on \nthe part of the International Federation\n of the Red Cross and Red Crescent Societies\n concerning the legal status of a\n territory or of its authorities.",
# position = c("left", "BOTTOM"),size = 0.9) +
tm_layout(legend.show = FALSE)#inner.margins=c(.04,.03, .04, .04))
#inner.margins=c(.04,.03, .02, .01),
ph_map2 = tm_shape(php_admin1)+ tm_polygons(border.col = "white",lwd = 0.01,lyt='dotted',alpha =0.2) +
#tm_shape(typhoon_region) +# tm_borders(lwd = 2,col='red') +
tm_credits( subtitle,position = c("left", "top"),size = 0.7) +
tm_logo('combined_logo.png',#https://www.510.global/wp-content/uploads/2017/07/510-LOGO-WEBSITE-01.png',
height=3, position = c("right", "top"))+
tm_layout(legend.show = FALSE)
map1<- tmap_arrange(ph_map,ph_map2,impact_map2,impact_map,nrow=2,ncol = 2,widths = c(.3, .7),heights = c(.3, .7))
return(map1)
}
map1<-Make_maps(php_admin1,php_admin3_,my_track,tc_tracks,TYF,Typhoon_stormname)
tmap_save(map1,
filename = paste0(main_directory,'forecast/',Typhoon_stormname,'/Impact_',TYF,'_',forecast_time,'_',  Typhoon_stormname,'.png'),
width=20, height=24,dpi=600,
units="cm")
