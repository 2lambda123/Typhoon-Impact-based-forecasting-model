newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="CHB_L_W"){     ### CHB_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="CWS_L_W"){ ### CWS_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%        mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Salvage.Wall=pre_damage)
}
if(as.character(sheets[i])=="C1_L_S"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="W1_L"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>%  mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="W3_L"){     #####W3-L    x<-seq(50,180,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="N_L"){    ########### N-L   #    x<-seq(80,200,10)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse (newdata$WAE_vmax_kph <80, 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Salvage.Wall=pre_damage)
}
}
for(i in 1:7)
{  if(as.character(sheets[i])=="C1_M"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
#mydf <- mydf %>% mutate(WAE_vmax_kph=X2)
#names(mydf)[2] <- "WAE_vmax_kph"
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="CHB_L_W"){     ### CHB_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%dplyr:: mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="CWS_L_W"){ ### CWS_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%        mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Salvage.Wall=pre_damage)
}
if(as.character(sheets[i])=="C1_L_S"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="W1_L"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% dplyr:: mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>%  mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="W3_L"){     #####W3-L    x<-seq(50,180,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr:: mutate(WAE_vmax_kph=X2) %>% select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="N_L"){    ########### N-L   #    x<-seq(80,200,10)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse (newdata$WAE_vmax_kph <80, 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Salvage.Wall=pre_damage)
}
}
for(i in 1:7)
{  if(as.character(sheets[i])=="C1_M"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
#mydf <- mydf %>% mutate(WAE_vmax_kph=X2)
#names(mydf)[2] <- "WAE_vmax_kph"
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="CHB_L_W"){     ### CHB_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%dplyr:: mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="CWS_L_W"){ ### CWS_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%        mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Salvage.Wall=pre_damage)
}
if(as.character(sheets[i])=="C1_L_S"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="W1_L"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% dplyr:: mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>%  mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="W3_L"){     #####W3-L    x<-seq(50,180,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr:: mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="N_L"){    ########### N-L   #    x<-seq(80,200,10)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse (newdata$WAE_vmax_kph <80, 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Salvage.Wall=pre_damage)
}
}
newdata<-newdata  %>%
dplyr::mutate(damage_baseline=(MAT_Strong.Roof.Strong.Wall*	DAM_Strong.Roof.Strong.Wall+
MAT_Strong.Roof.Light.Wall*	DAM_Strong.Roof.Light.Wall+
MAT_Strong.Roof.Salvage.Wall*	DAM_Strong.Roof.Salvage.Wall+
MAT_Light.Roof.Strong.Wall*	DAM_Light.Roof.Strong.Wall+
MAT_Light.Roof.Light.Wall*	DAM_Light.Roof.Light.Wall+
MAT_Light.Roof.Salvage.Wall*	DAM_Light.Roof.Light.Wall+  #DAM_Light.Roof.Salvage.Wall #################
MAT_Salvaged.Roof.Strong.Wall*DAM_Light.Roof.Strong.Wall + #	DAM_Salvaged.Roof.Strong.Wall+ ####################
MAT_Salvaged.Roof.Light.Wall*	DAM_Salvaged.Roof.Light.Wall +
MAT_Salvaged.Roof.Salvage.Wall*	DAM_Salvaged.Roof.Salvage.Wall)) %>%
dplyr::select(GEN_mun_code,GEN_mun_name,GEN_typhoon_name,damage_baseline,DAM_comp_houses_perc)
newdata<-newdata  %>%
dplyr::mutate(damage_baseline=(MAT_Strong.Roof.Strong.Wall*	DAM_Strong.Roof.Strong.Wall+
MAT_Strong.Roof.Light.Wall*	DAM_Strong.Roof.Light.Wall+
MAT_Strong.Roof.Salvage.Wall*	DAM_Strong.Roof.Salvage.Wall+
MAT_Light.Roof.Strong.Wall*	DAM_Light.Roof.Strong.Wall+
MAT_Light.Roof.Light.Wall*	DAM_Light.Roof.Light.Wall+
MAT_Light.Roof.Salvage.Wall*	DAM_Light.Roof.Light.Wall+  #DAM_Light.Roof.Salvage.Wall #################
MAT_Salvaged.Roof.Strong.Wall*DAM_Light.Roof.Strong.Wall + #	DAM_Salvaged.Roof.Strong.Wall+ ####################
MAT_Salvaged.Roof.Light.Wall*	DAM_Salvaged.Roof.Light.Wall +
MAT_Salvaged.Roof.Salvage.Wall*	DAM_Salvaged.Roof.Salvage.Wall)) %>%
dplyr::select(GEN_mun_Code,GEN_mun_name,GEN_typhoon_name,damage_baseline,DAM_comp_houses_perc)
baseline <- function(newdata,threshold) {
# newdata=df2
# threshold=0.55
newdata <- newdata %>% mutate(X2=WAE_vmax_kph)
path <- 'C://Users//ATeklesadik//OneDrive - Rode Kruis//Documents//documents//philipiness//basline_model_data//BASILE_MODEL.xlsx'
sheets<- excel_sheets(path = path)
for(i in 1:7)
{  if(as.character(sheets[i])=="C1_M"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
#mydf <- mydf %>% mutate(WAE_vmax_kph=X2)
#names(mydf)[2] <- "WAE_vmax_kph"
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="CHB_L_W"){     ### CHB_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%dplyr:: mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="CWS_L_W"){ ### CWS_L_W    x<-seq(100,350,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%        mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Strong.Roof.Salvage.Wall=pre_damage)
}
if(as.character(sheets[i])=="C1_L_S"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Strong.Wall=pre_damage)
}
if(as.character(sheets[i])=="W1_L"){
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>% dplyr:: mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>%  mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Light.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="W3_L"){     #####W3-L    x<-seq(50,180,10)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr:: mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
# newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse ((newdata$WAE_vmax_kph <80 | y_predicted < 0), 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Light.Wall=pre_damage)
}
if(as.character(sheets[i])=="N_L"){    ########### N-L   #    x<-seq(80,200,10)
cvfit_2 <- lm(X1 ~ poly(WAE_vmax_kph, degree = 5, raw = TRUE), data=mydf)
mydf <- openxlsx::read.xlsx(path, sheet = i, startRow = 1, colNames = FALSE) %>%
dplyr::mutate(WAE_vmax_kph=X2) %>%
dplyr::select(X1,WAE_vmax_kph)
y_predicted <- predict(cvfit_2, newdata = newdata)
newdata <- newdata  %>% dplyr::mutate(pre_damage=ifelse (((newdata$WAE_vmax_kph >80) & (y_predicted > threshold)), 1, 0))
#newdata <- newdata %>% mutate(pre_damage=ifelse (newdata$WAE_vmax_kph >200, 1, y_predicted)) %>%         mutate(pre_damage=ifelse (newdata$WAE_vmax_kph <80, 0, y_predicted))
newdata <- newdata  %>% dplyr::mutate(DAM_Salvaged.Roof.Salvage.Wall=pre_damage)
}
}
newdata<-newdata  %>%
dplyr::mutate(damage_baseline=(MAT_Strong.Roof.Strong.Wall*	DAM_Strong.Roof.Strong.Wall+
MAT_Strong.Roof.Light.Wall*	DAM_Strong.Roof.Light.Wall+
MAT_Strong.Roof.Salvage.Wall*	DAM_Strong.Roof.Salvage.Wall+
MAT_Light.Roof.Strong.Wall*	DAM_Light.Roof.Strong.Wall+
MAT_Light.Roof.Light.Wall*	DAM_Light.Roof.Light.Wall+
MAT_Light.Roof.Salvage.Wall*	DAM_Light.Roof.Light.Wall+  #DAM_Light.Roof.Salvage.Wall #################
MAT_Salvaged.Roof.Strong.Wall*DAM_Light.Roof.Strong.Wall + #	DAM_Salvaged.Roof.Strong.Wall+ ####################
MAT_Salvaged.Roof.Light.Wall*	DAM_Salvaged.Roof.Light.Wall +
MAT_Salvaged.Roof.Salvage.Wall*	DAM_Salvaged.Roof.Salvage.Wall)) %>%
dplyr::select(GEN_mun_Code,GEN_mun_name,GEN_typhoon_name,damage_baseline,DAM_comp_houses_perc)
return(newdata)
}
source('C://Users//ATeklesadik//OneDrive - Rode Kruis//Documents//documents//philipiness//Typhoons//Typhoon_forecast//data_source.R')
data_matrix<-read_csv('C://Users//ATeklesadik//OneDrive - Rode Kruis//Documents//documents//philipiness//Typhoons//datamatrix_Hazard_impact_static.csv')
data<-clean_typhoon_data(data_matrix)
typhoon_names<- c("Bopha","conson","Durian","Fengshen"	,"Fung-wong","Goni","Hagupit","Haima","Haiyan","Kalmaegi",
"ketsana","Koppu","Krosa","Lingling","Mangkhut","Mekkhala","Melor","Nari","Nesat","Nock-Ten",
"Rammasun","Sarika","Utor")
df2 <- data %>%
dplyr::mutate(WAE_vmax_kph = 1.60934*WEA_vmax_sust_mhp, more_than_10_perc_damage = DAM_comp_houses_perc)%>%
dplyr::select(#-GEN_typhoon_name,
#-GEN_typhoon_name_year,
#-GEN_mun_code,
-GEN_prov_name,
#-GEN_mun_name,
-GEO_n_households,
-WEA_vmax_sust_cube,
-WEA_vmax_sust_sqr,
# -contains('DAM_'),
-contains('INT_')) %>%
na.omit()
baseline_prediction<-baseline(newdata=df2,threshold=0.55)%>%
dplyr::mutate(typhoon=GEN_typhoon_name,R2_score_=MLmetrics::R2_Score(damage_baseline,DAM_comp_houses_perc),
MAE_ =MLmetrics::MAE(damage_baseline,DAM_comp_houses_perc),
MedianAE_ =MLmetrics::MedianAE(damage_baseline,DAM_comp_houses_perc),
RMSE_ =MLmetrics::RMSE(damage_baseline,DAM_comp_houses_perc),
kendallR2=measureKendallTau(DAM_comp_houses_perc,damage_baseline),
EexpVAR=measureEXPVAR(DAM_comp_houses_perc,damage_baseline)) %>%
dplyr::select(typhoon,R2_score_,MAE_,MedianAE_,RMSE_,kendallR2,EexpVAR) %>%
dplyr::group_by(typhoon) %>% dplyr::summarise(rsq=mean(R2_score_),
mae=mean(MAE_),
madae=mean(MedianAE_),
rmse=mean(RMSE_),
kendalltau=mean(kendallR2),
expvar=mean(EexpVAR)) %>%
gather("keys","measure",-typhoon)  %>% dplyr::mutate(model_name="baseine")
install.packages("Kendall")
library(Kendall)
remove.packages("Kendall", lib="~/R/win-library/3.6")
baseline_prediction<-baseline(newdata=df2,threshold=0.55)%>%
dplyr::mutate(typhoon=GEN_typhoon_name,R2_score_=MLmetrics::R2_Score(damage_baseline,DAM_comp_houses_perc),
MAE_ =MLmetrics::MAE(damage_baseline,DAM_comp_houses_perc),
MedianAE_ =MLmetrics::MedianAE(damage_baseline,DAM_comp_houses_perc),
RMSE_ =MLmetrics::RMSE(damage_baseline,DAM_comp_houses_perc),
#kendallR2=measureKendallTau(DAM_comp_houses_perc,damage_baseline),
kendallR2=cor(DAM_comp_houses_perc,damage_baseline,method="Kendall"),
EexpVAR=measureEXPVAR(DAM_comp_houses_perc,damage_baseline)) %>%
dplyr::select(typhoon,R2_score_,MAE_,MedianAE_,RMSE_,kendallR2,EexpVAR) %>%
dplyr::group_by(typhoon) %>% dplyr::summarise(rsq=mean(R2_score_),
mae=mean(MAE_),
madae=mean(MedianAE_),
rmse=mean(RMSE_),
kendalltau=mean(kendallR2),
expvar=mean(EexpVAR)) %>%
gather("keys","measure",-typhoon)  %>% dplyr::mutate(model_name="baseine")
baseline_prediction<-baseline(newdata=df2,threshold=0.55)%>%
dplyr::mutate(typhoon=GEN_typhoon_name,R2_score_=MLmetrics::R2_Score(damage_baseline,DAM_comp_houses_perc),
MAE_ =MLmetrics::MAE(damage_baseline,DAM_comp_houses_perc),
MedianAE_ =MLmetrics::MedianAE(damage_baseline,DAM_comp_houses_perc),
RMSE_ =MLmetrics::RMSE(damage_baseline,DAM_comp_houses_perc),
#kendallR2=measureKendallTau(DAM_comp_houses_perc,damage_baseline),
kendallR2=cor(x=DAM_comp_houses_perc,y=damage_baseline,method="kendall"),
EexpVAR=measureEXPVAR(DAM_comp_houses_perc,damage_baseline)) %>%
dplyr::select(typhoon,R2_score_,MAE_,MedianAE_,RMSE_,kendallR2,EexpVAR) %>%
dplyr::group_by(typhoon) %>% dplyr::summarise(rsq=mean(R2_score_),
mae=mean(MAE_),
madae=mean(MedianAE_),
rmse=mean(RMSE_),
kendalltau=mean(kendallR2),
expvar=mean(EexpVAR)) %>%
gather("keys","measure",-typhoon)  %>% dplyr::mutate(model_name="baseine")
install.packages("measures")
library(measures)
baseline_prediction<-baseline(newdata=df2,threshold=0.55)%>%
dplyr::mutate(typhoon=GEN_typhoon_name,R2_score_=MLmetrics::R2_Score(damage_baseline,DAM_comp_houses_perc),
MAE_ =MLmetrics::MAE(damage_baseline,DAM_comp_houses_perc),
MedianAE_ =MLmetrics::MedianAE(damage_baseline,DAM_comp_houses_perc),
RMSE_ =MLmetrics::RMSE(damage_baseline,DAM_comp_houses_perc),
kendallR2=measures::KendallTau(DAM_comp_houses_perc,damage_baseline),
#kendallR2=cor(x=DAM_comp_houses_perc,y=damage_baseline,method="kendall"),
EexpVAR=measures::EXPVAR(DAM_comp_houses_perc,damage_baseline)) %>%
dplyr::select(typhoon,R2_score_,MAE_,MedianAE_,RMSE_,kendallR2,EexpVAR) %>%
dplyr::group_by(typhoon) %>% dplyr::summarise(rsq=mean(R2_score_),
mae=mean(MAE_),
madae=mean(MedianAE_),
rmse=mean(RMSE_),
kendalltau=mean(kendallR2),
expvar=mean(EexpVAR)) %>%
gather("keys","measure",-typhoon)  %>% dplyr::mutate(model_name="baseine")
baseline_prediction<-baseline(newdata=df2,threshold=0.55)%>%
dplyr::mutate(typhoon=GEN_typhoon_name,
R2_score_=MLmetrics::R2_Score(damage_baseline,DAM_comp_houses_perc),
MAE_ =MLmetrics::MAE(damage_baseline,DAM_comp_houses_perc),
MedianAE_ =MLmetrics::MedianAE(damage_baseline,DAM_comp_houses_perc),
RMSE_ =MLmetrics::RMSE(damage_baseline,DAM_comp_houses_perc),
kendallR2_=measures::KendallTau(DAM_comp_houses_perc,damage_baseline),
#kendallR2=cor(x=DAM_comp_houses_perc,y=damage_baseline,method="kendall"),
EexpVAR_=measures::EXPVAR(DAM_comp_houses_perc,damage_baseline)) %>%
dplyr::select(typhoon,R2_score_,MAE_,MedianAE_,RMSE_,kendallR2_,EexpVAR_) %>%
dplyr::group_by(typhoon) %>% dplyr::summarise(rsq=mean(R2_score_),
mae=mean(MAE_),
madae=mean(MedianAE_),
rmse=mean(RMSE_),
kendalltau=mean(kendallR2_),
expvar=mean(EexpVAR_)) %>%
gather("keys","measure",-typhoon)  %>% dplyr::mutate(model_name="baseine")
View(baseline_prediction)
baseline_prediction<-baseline(newdata=df2,threshold=0.55)%>%
dplyr::mutate(typhoon=GEN_typhoon_name,
R2_score_=MLmetrics::R2_Score(damage_baseline,DAM_comp_houses_perc),
MAE_ =MLmetrics::MAE(damage_baseline,DAM_comp_houses_perc),
MedianAE_ =MLmetrics::MedianAE(damage_baseline,DAM_comp_houses_perc),
RMSE_ =MLmetrics::RMSE(damage_baseline,DAM_comp_houses_perc),
kendallR2_=measures::KendallTau(DAM_comp_houses_perc,damage_baseline),
#kendallR2=cor(x=DAM_comp_houses_perc,y=damage_baseline,method="kendall"),
EexpVAR_=measures::EXPVAR(DAM_comp_houses_perc,damage_baseline)) %>%
dplyr::select(typhoon,R2_score_,MAE_,MedianAE_,RMSE_,kendallR2_,EexpVAR_) %>%
dplyr::group_by(typhoon) %>% dplyr::summarise(R2_score=mean(R2_score_),
mae=mean(MAE_),
madae=mean(MedianAE_),
rmse=mean(RMSE_),
kendalltau=mean(kendallR2_),
expvar=mean(EexpVAR_)) %>%
gather("keys","measure",-typhoon)  %>% dplyr::mutate(model_name="baseine")
data_linearmodel_plot<-read.csv("C:/documents/philipiness/Typhoons/Journal_paper_ibf/figures/linear_models_data2.csv")
data_linearmodel_plot<-read.csv("C:/Users/ATeklesadik/Documents/Journal_paper_ibf/figures/linear_models_data2.csv")
data_linearmodel_plot2<-data_linearmodel_plot  %>% dplyr::filter(keys %in% c("mae","medae" ,"rmse" ) )
data_linearmodel_plot1<-data_linearmodel_plot  %>% dplyr::filter(keys %in% c("expvar","kendalltau","rsq" ) )
data_linearmodel_plotmae<-data_linearmodel_plot1 %>% dplyr::filter(measure < 2 ,measure>-1)
data_linearmodel_plotmae2<-data_linearmodel_plot2 %>% dplyr::filter(measure < 20 ,measure>-1)
boxplot.typhon_lm1<-
ggplot(data = data_linearmodel_plotmae, aes(x = model_name, y = measure)) + theme_light()+
geom_boxplot( aes(color = set),outlier.colour=NA) +
geom_jitter(color="grey", size=0.1, alpha=0.25)+
#facet_grid(typhoon ~ keys,scales = "free",labeller = labeller(keys = c("mae" = "MAE","mape" = "MAPE",                                                                           "mse" = "MSE","rmse"="RMSE") ))+
facet_wrap(~keys,nrow = 1,      scales = "free",labeller = labeller(keys = c("expvar"="Exp Variance","mae" = "Mean AE","medae" = "Median AE",  "rsq" = "R2","rmse"="RMSE","kendalltau"="Kendall R2") ))+
ggtitle("Comparsion of Model Accuracy for traing and validation sets") +
theme(plot.title = element_text(color="Black", size=12,hjust = 0.5),legend.position="bottom",
axis.title.x=element_blank(),
axis.title.y =element_blank(),
legend.title=element_blank(),
legend.box = "horizontal",text = element_text(size=10))
boxplot.typhon_lm2<- ggplot(data = data_linearmodel_plotmae2, aes(x = model_name, y = measure)) + theme_light()+
geom_boxplot( aes(color = set),outlier.colour=NA, outlier.shape=16, outlier.size=.1) +
geom_jitter(color="grey", size=0.1, alpha=0.25)+
#facet_grid(typhoon ~ keys,scales = "free",labeller = labeller(keys = c("mae" = "MAE","mape" = "MAPE",                                                                           "mse" = "MSE","rmse"="RMSE") ))+
facet_wrap(~keys,nrow = 1,      scales = "free",labeller = labeller(keys = c("expvar"="Exp Variance","mae" = "Mean AE","medae" = "Median AE",  "rsq" = "R2","rmse"="RMSE","kendalltau"="Kendall R2") ))+
ggtitle("Comparsion of Model Accuracy for traing and validation sets") +
theme(plot.title = element_text(color="Black", size=12,hjust = 0.5),legend.position="bottom",
axis.title.x=element_blank(),
axis.title.y =element_blank(),
legend.title=element_blank(),
legend.box = "horizontal",text = element_text(size=10))
# ggsave('C:/documents/philipiness/Typhoons/Journal_paper_ibf/figures/boxplot_summery.png',plot=boxplot.typhon, scale=1,width=20,height = 10, units="cm",dpi = 300)
ggsave('C:/documents/philipiness/Typhoons/Journal_paper_ibf/figures/boxplot.typhon_lm2.PNG',
plot=boxplot.typhon_lm2, scale=1,width=24,height = 12, units="cm",dpi = 400)
# ggsave('C:/documents/philipiness/Typhoons/Journal_paper_ibf/figures/boxplot_summery.png',plot=boxplot.typhon, scale=1,width=20,height = 10, units="cm",dpi = 300)
ggsave('C:/Users/ATeklesadik/Documents/Journal_paper_ibf/figures/boxplot.typhon_lm2.PNG',
plot=boxplot.typhon_lm2, scale=1,width=24,height = 12, units="cm",dpi = 400)
ggsave('C:/Users/ATeklesadik/Documents/Journal_paper_ibf/figures/boxplot.typhon_lm.PNG',
plot=boxplot.typhon_lm1, scale=1,width=24,height = 12, units="cm",dpi = 500)
data_linearmodel_plot2<-data_linearmodel_plot  %>% dplyr::filter(keys %in% c("mae","medae" ,"rmse" ) )
data_linearmodel_plot1<-data_linearmodel_plot  %>% dplyr::filter(keys %in% c("expvar","kendalltau","rsq" ) )
#data_linearmodel_plotmae<-data_linearmodel_plot1 %>% dplyr::filter(measure < 2 ,measure>-1)
#data_linearmodel_plotmae2<-data_linearmodel_plot2 %>% dplyr::filter(measure < 20 ,measure>-1)
boxplot.typhon_lm1<-
ggplot(data = data_linearmodel_plotmae, aes(x = model_name, y = measure)) + theme_light()+
geom_boxplot( aes(color = set),outlier.colour=NA) +
geom_jitter(color="grey", size=0.1, alpha=0.25)+
#facet_grid(typhoon ~ keys,scales = "free",labeller = labeller(keys = c("mae" = "MAE","mape" = "MAPE",                                                                           "mse" = "MSE","rmse"="RMSE") ))+
facet_wrap(~keys,nrow = 1,      scales = "free",labeller = labeller(keys = c("expvar"="Exp Variance","mae" = "Mean AE","medae" = "Median AE",  "rsq" = "R2","rmse"="RMSE","kendalltau"="Kendall R2") ))+
ggtitle("Comparsion of Model Accuracy for traing and validation sets") +
theme(plot.title = element_text(color="Black", size=12,hjust = 0.5),legend.position="bottom",
axis.title.x=element_blank(),
axis.title.y =element_blank(),
legend.title=element_blank(),
legend.box = "horizontal",text = element_text(size=10))
boxplot.typhon_lm2<- ggplot(data = data_linearmodel_plotmae2, aes(x = model_name, y = measure)) + theme_light()+
geom_boxplot( aes(color = set),outlier.colour=NA, outlier.shape=16, outlier.size=.1) +
geom_jitter(color="grey", size=0.1, alpha=0.25)+
#facet_grid(typhoon ~ keys,scales = "free",labeller = labeller(keys = c("mae" = "MAE","mape" = "MAPE",                                                                           "mse" = "MSE","rmse"="RMSE") ))+
facet_wrap(~keys,nrow = 1,      scales = "free",labeller = labeller(keys = c("expvar"="Exp Variance","mae" = "Mean AE","medae" = "Median AE",  "rsq" = "R2","rmse"="RMSE","kendalltau"="Kendall R2") ))+
ggtitle("Comparsion of Model Accuracy for traing and validation sets") +
theme(plot.title = element_text(color="Black", size=12,hjust = 0.5),legend.position="bottom",
axis.title.x=element_blank(),
axis.title.y =element_blank(),
legend.title=element_blank(),
legend.box = "horizontal",text = element_text(size=10))
# ggsave('C:/documents/philipiness/Typhoons/Journal_paper_ibf/figures/boxplot_summery.png',plot=boxplot.typhon, scale=1,width=20,height = 10, units="cm",dpi = 300)
ggsave('C:/Users/ATeklesadik/Documents/Journal_paper_ibf/figures/boxplot.typhon_lm2.PNG',
plot=boxplot.typhon_lm2, scale=1,width=24,height = 12, units="cm",dpi = 400)
ggsave('C:/Users/ATeklesadik/Documents/Journal_paper_ibf/figures/boxplot.typhon_lm.PNG',
plot=boxplot.typhon_lm1, scale=1,width=24,height = 12, units="cm",dpi = 500)
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_kenya')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_kenya')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_kenya')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_kenya')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_kenya')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_kenya')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_kenya')
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Flood_impact_models/dashboard/catalog_view_Ethiopia')
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/typhoon_infographic')
