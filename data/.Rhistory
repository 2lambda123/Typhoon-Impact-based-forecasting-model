geom_vline(xintercept = as.Date("2010/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2011/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2014/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2016/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2019/06/01"),color='#f03b20',size=.3) +
#geom_vline(xintercept = as.Date("2009/06/01"),color='#f03b20',size=2) +
# geom_vline(xintercept = as.Date("2015/06/01"),color='#f03b20',size=2) +
#geom_vline(xintercept = as.Date("2017/06/01"),color='#d95f0e') +
scale_x_date(name="time",date_breaks="24 months")+
#scale_x_date(name="time") +
scale_y_continuous(name="SPI 12")+
geom_rect(data=rect_data, aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax,fill=col),alpha=0.2)+
scale_fill_identity()+
coord_cartesian(ylim=c(-4.0,3.5)) +
ggtitle('SPI 12 month for western high potential zone (KE2011L121) + EMDAT drought reports fro Kenya')+
#ggtitle('SPEI 1 month over region (2.75,35.25,4.25,36.75) + EMDAT drought reports fro Kenya')+
theme(text = element_text(size=15),
axis.text.x = element_text( size = 9, angle = 90,hjust = 1),
axis.text.y = element_text( size = 10, angle = 0),
plot.title=element_text(size=18),
plot.background = element_rect(fill = "transparent",colour = NA))
ggsave(filename=paste0("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/",'SPI12_KE2011L121.png'),plot=scatwinddam, width = 30, height = 20, units = "cm")
ENSO <- read.csv("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/ethiopia/ENSO.csv")
ENSO<-ENSO %>% gather("MON",'ONI',-Year) %>% arrange(Year) %>%  mutate(dates_=seq(as.Date("1950/01/01"), by = "month", length.out = 490),
col = ifelse(ONI>=0,'p', 'n'))%>%filter(dates_>=as.Date("1980/01/01"))
View(ENSO)
View(ENSO)
71*12
ENSO <- read.csv("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/ethiopia/ENSO.csv")
ENSO<-ENSO %>% gather("MON",'ONI',-Year) %>% arrange(Year) %>%  mutate(dates_=seq(as.Date("1950/01/01"), by = "month", length.out = 852),
col = ifelse(ONI>=0,'p', 'n'))%>%filter(dates_ >= as.Date("1980/01/01"))
ENSO<-ENSO %>% gather("MON",'ONI',-Year) %>% arrange(Year) %>%  mutate(dates_=seq(as.Date("1950/01/01"), by = "month", length.out = 852),
col = ifelse(ONI>=0,'p', 'n'))%>%filter(dates_ >= as.Date("1980/01/01"))
ENSO <- read.csv("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/ethiopia/ENSO.csv")
ENSO<-ENSO %>% gather("MON",'ONI',-Year) %>% arrange(Year) %>%  mutate(dates_=seq(as.Date("1950/01/01"), by = "month", length.out = 852),
col = ifelse(ONI>=0,'p', 'n'))%>%filter(dates_ >= as.Date("1980/01/01"))
ensograp<-ggplot() + geom_area(data=ENSO, aes(x=dates_, y=ONI)) +
geom_hline(yintercept=2, linetype="dashed", color = "red") +
# geom_hline(yintercept=1.5, linetype="dashed", color = "red") +
geom_hline(yintercept=1, linetype="dashed", color = "red") +
#geom_hline(yintercept=0.5, linetype="dashed", color = "red") +
#geom_hline(yintercept=-0.5, linetype="dashed", color = "blue") +
geom_hline(yintercept=-1.0, linetype="dashed", color = "blue") +
#geom_hline(yintercept=-1.5, linetype="dashed", color = "blue") +
geom_hline(yintercept=-2.0, linetype="dashed", color = "blue") +
geom_vline(xintercept = as.Date("1983/01/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("1994/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("1996/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("1999/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2004/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2005/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2008/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2010/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2011/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2014/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2016/06/01"),color='#f03b20',size=.3) +
geom_vline(xintercept = as.Date("2019/06/01"),color='#f03b20',size=.3) +
#geom_vline(xintercept = as.Date("2017/06/01"),color='#d95f0e') +
scale_x_date(name="time",date_breaks="24 months")+
#scale_x_date(name="time") +
scale_y_continuous(name="SST anomalies") +
coord_cartesian(ylim=c(-2,2.5)) +
ggtitle('3 month running mean of ERSST.v5 SST anomalies in the NiÃ±o  3.4 region \n (5oN-5oS, 120o-170oW)')+
theme(text = element_text(size=15),
axis.text.x = element_text( size = 9, angle = 90,hjust = 1),
axis.text.y = element_text( size = 10, angle = 0),
plot.title=element_text(size=18),
plot.background = element_rect(fill = "transparent",colour = NA))
ggsave(filename=paste0("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/",'enso.png'),plot=ensograp, width = 30, height = 20, units = "cm")
View(spi_LHZ)
spi3 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_3_1983_2012.nc")
spi6 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_6_1983_2012.nc")
spi12 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_12_1983_2012.nc")
ESA_admin1_region <- sf::read_sf(paste0(work_dir,"shapes/ESA_admin1_region.shp"))%>%
dplyr::mutate(ADM2_EN=Admin) %>% dplyr::select(ADM2_EN)
work_dir<-'C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard/'
ESA_admin1_region <- sf::read_sf(paste0(work_dir,"shapes/ESA_admin1_region.shp"))%>%
dplyr::mutate(ADM2_EN=Admin) %>% dplyr::select(ADM2_EN)
spi3 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_3_1983_2012.nc")
spi6 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_6_1983_2012.nc")
spi12 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_12_1983_2012.nc")
spi_LHZ <- exact_extract(spi3, ESA_admin1_region, 'mean')
spi_LHZ <- as.data.frame(t(as.matrix(spi_LHZ)), col.names =as.character(ESA_admin1_region$ADM2_EN)  )
names(spi_LHZ)<-as.character(ESA_admin1_region$ADM2_EN)
View(spi_LHZ)
View(ESA_admin1_region)
spi_LHZ<-spi_LHZ %>% mutate(ID=rownames(spi_LHZ)) %>% mutate(ID=gsub("[.]", "/", substr(ID, 7, 16))) %>% mutate(date=as_date(ID))
admins <- list('Mozambique', 'Lesotho', 'Namibia')
ESA_admin1_region <- sf::read_sf(paste0(work_dir,"shapes/ESA_admin1_region.shp"))%>% filter(Country %in% admins)%>%
dplyr::mutate(ADM2_EN=Admin) %>% dplyr::select(ADM2_EN)
admins <- list('Mozambique', 'Lesotho', 'Namibia')
ESA_admin1_region <- sf::read_sf(paste0(work_dir,"shapes/ESA_admin1_region.shp"))%>% filter(Country %in% admins)%>%
dplyr::mutate(ADM2_EN=Admin) %>% dplyr::select(ADM2_EN)
ESA_admin1_region <- sf::read_sf(paste0(work_dir,"shapes/ESA_admin1_region.shp"))
View(ESA_admin1_region)
ESA_admin1_region <- sf::read_sf(paste0(work_dir,"shapes/ESA_admin1_region.shp"))%>% filter(COUNTRY %in% admins)%>%
dplyr::mutate(ADM2_EN=Admin) %>% dplyr::select(ADM2_EN)
View(ESA_admin1_region)
spi3 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_3_1983_2012.nc")
spi6 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_6_1983_2012.nc")
spi12 <- brick("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/kenya/e2o_ecmwf_wrr1_glob30_mon_SPI_12_1983_2012.nc")
spi_LHZ <- exact_extract(spi3, ESA_admin1_region, 'mean')
spi_LHZ <- as.data.frame(t(as.matrix(spi_LHZ)), col.names =as.character(ESA_admin1_region$ADM2_EN)  )
names(spi_LHZ)<-as.character(ESA_admin1_region$ADM2_EN)
spi_LHZ<-spi_LHZ %>% mutate(ID=rownames(spi_LHZ)) %>% mutate(ID=gsub("[.]", "/", substr(ID, 7, 16))) %>% mutate(date=as_date(ID))
View(ESA_admin1_region)
ESA_admin1_region <- sf::read_sf(paste0(work_dir,"shapes/ESA_admin1_region.shp"))%>% filter(COUNTRY %in% admins)%>%
dplyr::mutate(ADM2_EN=Admin)# %>% dplyr::select(ADM2_EN)
View(ESA_admin1_region)
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
View(df_impact_raw)
View(All_df)
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
View(Emdat_impact_sff)
View(Mozambique)
View(SA_admin_region)
rm(list=ls())
library(raster)
library(sp)
library(exactextractr)
library(dplyr)
path <- "C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/mongolia/clipped rasters/"
MO_ADM1 <- st_read("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/mongolia/mng_adm_nso_20201019_shp/mng_admbnda_adm1_nso_20201019.shp")
library(sp)
library(dplyr)
library(sf)
path <- "C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/mongolia/clipped rasters/"
MO_ADM1 <- st_read("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/mongolia/mng_adm_nso_20201019_shp/mng_admbnda_adm1_nso_20201019.shp")
MO_ADM1 <-st_transform(MO_ADM1, crs="+proj=utm +zone=48 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
MO_ADM1$Area_sqm <- st_area(MO_ADM1)
list_dfs<-list()
rc1 <- function(r) {
ifelse(( (r[[1]] == 107 && r[[2]]==13) && r[[3]]==13), 1, NA )
}
list1<-c('2015224_4192','20151231_9171','20170223_3381','20170223_9232')
for (items in list1){
r <- stack(paste0(path,items,'.tif'))
r.class <- overlay(r, fun=rc1)
DZ_admin <- exact_extract(r.class, MO_ADM1, 'sum')
cell_area<-res(r.class)[2]*res(r.class)[1]
dz_df <- tibble(pcode = MO_ADM1$ADM1_PCODE, date = items,  Dzud_risk = DZ_admin*cell_area,cell_area=cell_area)
list_dfs[[items]] <- dz_df
}
rm(list=ls())
library(raster)
library(sp)
library(sf)
library(exactextractr)
library(dplyr)
path <- "C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/mongolia/clipped rasters/"
MO_ADM1 <- st_read("C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/mongolia/mng_adm_nso_20201019_shp/mng_admbnda_adm1_nso_20201019.shp")
MO_ADM1 <-st_transform(MO_ADM1, crs="+proj=utm +zone=48 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
MO_ADM1$Area_sqm <- st_area(MO_ADM1)
list_dfs<-list()
rc1 <- function(r) {
ifelse(( (r[[1]] == 107 && r[[2]]==13) && r[[3]]==13), 1, NA )
}
list1<-c('2015224_4192','20151231_9171','20170223_3381','20170223_9232')
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
View(All_df)
write.csv(All_df,"C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/COVID/all_df.csv")
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
View(All_df)
matrix(c(7,9,8,6,10,12),nrow = 2,ncol = 3,byrow = TRUE)
matrix(c(3,5,8,4),nrow = 2,ncol = 2,byrow = TRUE)
matrix(c(3,5,8,4),nrow = 2,ncol = 2,byrow = TRUE)*matrix(c(3,5,8,4),nrow = 2,ncol = 2,byrow = TRUE)
norm(1.96)
a<-matrix(c(3,5,8,4),nrow = 2,ncol = 2,byrow = TRUE)
a
cbind(a,a)
a[1,1]
a[2,1]
console(-2)
history()
c(3,3)
options(scipen = 10)
options()
matrix(1:6,3,2)
matrix(1:6,3,2)[-,1]
matrix(1:6,3,2)[,-1]
fact<-factor(c("de","re","re","de
"))
fact[2]
rm(list=ls())
library(tmap)
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
View(admin)
View(Mozambique)
View(Namibia)
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
View(rain_df_daily)
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
selected_pcode=='MOZ01'
selected_pcode='MOZ01'
vci_PCODE <- vci_df %>%filter(ADM1_PCODE == selected_pcode))
vci_PCODE <- vci_df %>%filter(ADM1_PCODE == selected_pcode)
RAIN_PCODE <- rain_df_daily %>%filter(ADM1_PCODE == selected_pcode)
p <- plot_matrix_spi(
spi_index=1,
spi_threshold=-1,
RAIN_PCODE
)
P
p
p <- plot_matrix_vci(
vci_threshold=30,
vci_PCODE
)
p
p <- plot_matrix_vci(
vci_threshold=40,
vci_PCODE
)
p
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
selected_pcode <- "MOZ01")
selected_pcode <- "MOZ01"
impact_map <- renderLeaflet({
flood_palette <- colorNumeric(palette = "YlOrRd", domain = admin[[1]]$n_events)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addPolygons(data = admin[[1]], label=admin[[1]] %>% pull(label[[1]]),
layerId=admin[[1]] %>% pull(layerId[[1]]),
col=~flood_palette(n_events), fillOpacity=0.8, opacity = 1, weight=1.2) %>%
addLegend("topleft",pal = flood_palette,
values = admin[[1]]$n_events,
title = "Number of reported Drought\n imapct (2000-2020)",
#labFormat = labelFormat(prefix = "# reported floods "),
opacity = 1)
})
impact_map
install.packages(c("airGR", "approxmatch", "backports", "BH", "broom", "callr", "caTools", "chron", "classInt", "cli", "clipr", "colorspace", "covr", "cowplot", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "DescTools", "devtools", "digest", "dotCall64", "dplyr", "DT", "e1071", "ellipsis", "exactextractr", "expm", "fansi", "farver", "fastmap", "fields", "foghorn", "forcats", "foreach", "fs", "gargle", "generics", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glue", "gower", "gplots", "haven", "hereR", "hexbin", "Hmisc", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "imager", "inline", "ipred", "isoband", "iterators", "janitor", "jsonlite", "knitr", "labeling", "later", "lava", "leaflet", "lifecycle", "lubridate", "magrittr", "maptools", "measures", "memoise", "mime", "modelr", "nngeo", "openssl", "openxlsx", "osmdata", "osrm", "pillar", "pingr", "pkgbuild", "pkgdown", "pkgKitten", "pkgload", "plotly", "plyr", "pROC", "processx", "promises", "ps", "purrr", "R.methodsS3", "R.oo", "R.utils", "R6", "rappdirs", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "recipes", "rematch2", "remotes", "reprex", "reshape2", "rex", "rgdal", "rgeos", "rJava", "rmarkdown", "ROCR", "roxygen2", "rprojroot", "rstudioapi", "rversions", "rvest", "shape", "shiny", "shinythemes", "shinyWidgets", "sp", "spacetime", "spam", "spelling", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tiff", "tinytest", "tinytex", "units", "usethis", "vctrs", "withr", "xfun", "xml2", "xmlparsedata", "xts", "yaml", "zip"))
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/flood/trigger-model/dashboard/IARP_trigger_dashboard')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/Drought_trigger_dashboard')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/Drought_trigger_dashboard')
settings$SA_region
elm
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/Drought_trigger_dashboard')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/Drought_trigger_dashboard')
runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/Drought_trigger_dashboard')
runApp()
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/skill-assessment/SAP_trigger_dashboard')
shiny::runApp('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/IBF-system/trigger-model-development/drought/Drought_trigger_dashboard')
library(stringr)
library(ggplot2)
library(gridExtra)
library(tmap)
library(viridis)
library(maps)
library(ggmap)
library(httr)
library(sf)
library(raster)
library(rgdal)
################################
library(dplyr)
library(lubridate)
library(readr)
library(janitor)
#setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/data')
Typhoon_events<- readr::read_csv("./Impact data/Typhoon_events_with_impact_data.csv")%>%
dplyr::mutate(International_Name=toupper(International_Name))
historical_typhoon_wind<- read.csv("./historical_typhoon_wind/ibtracs.WP.list.v04r00.csv")%>%
clean_names()%>%dplyr::mutate(name=toupper(name),
YYYYMMDDHH=format(strptime(iso_time, format = "%Y-%m-%d %H:%M:%S"), '%Y%m%d%H'),
LAT=lat,
LON=lon,
V_usa=ifelse(dist2land<1,0.84*usa_wind,ifelse(dist2land>50,0.93*usa_wind,0.87*usa_wind)),
season=as.numeric(season),
VMAX=ifelse(!is.na(wmo_wind),wmo_wind,V_usa),
STORMNAME=name)%>%
dplyr::select(YYYYMMDDHH,LAT,LON,V_usa,VMAX,wmo_wind,usa_wind,STORMNAME,season,nature,lat,lon,wmo_pres,usa_lat,usa_lon,landfall,dist2land)%>%
dplyr::filter(season>2005 & STORMNAME %in% unique(Typhoon_events$International_Name))
historical_typhoon_wind<- read.csv("./historical_typhoon_wind/ibtracs.WP.list.v04r00.csv")%>%
clean_names()%>%dplyr::mutate(name=toupper(name),
YYYYMMDDHH=format(strptime(iso_time, format = "%Y-%m-%d %H:%M:%S"), '%Y%m%d%H'),
LAT=lat,
LON=lon,
VMAX2=usa_wind,#ifelse(dist2land<1,0.84*usa_wind,ifelse(dist2land>50,0.93*usa_wind,0.87*usa_wind)),
season=as.numeric(season),
VMAX=wmo_wind,#ifelse(!is.na(wmo_wind),wmo_wind,V_usa),
STORMNAME=name)%>%
dplyr::select(YYYYMMDDHH,LAT,LON,VMAX,VMAX2,STORMNAME,season,nature,lat,lon,wmo_pres,usa_lat,usa_lon,landfall,dist2land)%>%
dplyr::filter(season>2005 & STORMNAME %in% unique(Typhoon_events$International_Name))
TOKAGE<-historical_typhoon_wind%>%filter(STORMNAME=='TOKAGE')
View(TOKAGE)
unique(historical_typhoon_wind$STORMNAME))
unique(historical_typhoon_wind$STORMNAME)
historical_typhoon_wind<- read.csv("./historical_typhoon_wind/ibtracs.WP.list.v04r00.csv")%>%
clean_names()%>%dplyr::mutate(name=toupper(name),
YYYYMMDDHH=format(strptime(iso_time, format = "%Y-%m-%d %H:%M:%S"), '%Y%m%d%H'),
LAT=lat,
LON=lon,
VMAX2=usa_wind,#ifelse(dist2land<1,0.84*usa_wind,ifelse(dist2land>50,0.93*usa_wind,0.87*usa_wind)),
season=as.numeric(season),
VMAX=wmo_wind,#ifelse(!is.na(wmo_wind),wmo_wind,V_usa),
STORMNAME1=paste0(name,season),
STORMNAME=name)%>%
dplyr::select(YYYYMMDDHH,LAT,LON,VMAX,VMAX2,STORMNAME1,STORMNAME,season,nature,lat,lon,wmo_pres,usa_lat,usa_lon,landfall,dist2land)%>%
dplyr::filter(season>2005 & STORMNAME %in% unique(Typhoon_events$International_Name))
TOKAGE<-historical_typhoon_wind%>%filter(STORMNAME=='TOKAGE')
View(TOKAGE)
unique(historical_typhoon_wind$STORMNAME1)
Typhoon_events
Typhoon_events<- readr::read_csv("./Impact data/Typhoon_events_with_impact_data.csv")%>%
dplyr::mutate(International_Name=toupper(International_Name),STORMNAME1=paste0(International_Name,year))
Typhoon_events
historical_typhoon_wind<- read.csv("./historical_typhoon_wind/ibtracs.WP.list.v04r00.csv")%>%
clean_names()%>%dplyr::mutate(name=toupper(name),
YYYYMMDDHH=format(strptime(iso_time, format = "%Y-%m-%d %H:%M:%S"), '%Y%m%d%H'),
LAT=lat,
LON=lon,
VMAX2=usa_wind,#ifelse(dist2land<1,0.84*usa_wind,ifelse(dist2land>50,0.93*usa_wind,0.87*usa_wind)),
season=as.numeric(season),
VMAX=wmo_wind,#ifelse(!is.na(wmo_wind),wmo_wind,V_usa),
STORMNAME1=paste0(name,season),
STORMNAME=name)%>%
dplyr::select(YYYYMMDDHH,LAT,LON,VMAX,VMAX2,STORMNAME1,STORMNAME,season,nature,lat,lon,wmo_pres,usa_lat,usa_lon,landfall,dist2land)%>%
dplyr::filter(season>2005 & STORMNAME1 %in% unique(Typhoon_events$STORMNAME1))
unique(historical_typhoon_wind$STORMNAME1)
unique(historical_typhoon_wind$STORMNAME)
workdir
path
main_directory
path='C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/'
main_directory<-path
main_directory
historical_typhoon_wind<- read.csv("./historical_typhoon_wind/ibtracs.WP.list.v04r00.csv")%>%
clean_names()%>%dplyr::mutate(name=toupper(name),
YYYYMMDDHH=format(strptime(iso_time, format = "%Y-%m-%d %H:%M:%S"), '%Y%m%d%H'),
LAT=lat,
LON=lon,
VMAX=usa_wind,#ifelse(dist2land<1,0.84*usa_wind,ifelse(dist2land>50,0.93*usa_wind,0.87*usa_wind)),
season=as.numeric(season),
VMAX2=wmo_wind,#ifelse(!is.na(wmo_wind),wmo_wind,V_usa),
STORMNAME1=paste0(name,season),
STORMNAME=name)%>%
dplyr::select(YYYYMMDDHH,LAT,LON,VMAX,VMAX2,STORMNAME1,STORMNAME,season,nature,landfall,dist2land)%>%
dplyr::filter(season>2005 & STORMNAME1 %in% unique(Typhoon_events$STORMNAME1))
View(historical_typhoon_wind)
#!/usr/bin/env Rscript
args = commandArgs(trailingOnly=TRUE)
#options(warn=-1)
suppressMessages(library(stringr))
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(gridExtra))
suppressMessages(library(tmap))
suppressMessages(library(viridis))
suppressMessages(library(maps))
suppressMessages(library(ggmap))
suppressMessages(library(httr))
suppressMessages(library(sf))
suppressMessages(library(raster))
suppressMessages(library(rgdal))
suppressMessages(library(ranger))
suppressMessages(library(caret))
suppressMessages(library(randomForest))
suppressMessages(library(rlang))
suppressMessages(library(AUCRF))
suppressMessages(library(kernlab))
suppressMessages(library(ROCR))
suppressMessages(library(MASS))
suppressMessages(library(glmnet))
suppressMessages(library(MLmetrics))
suppressMessages(library(plyr))
suppressMessages(library(lubridate))
suppressMessages(library(rNOMADS))
suppressMessages(library(readr))
suppressMessages(library(janitor))
path='C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/'
main_directory<-path
setwd(path)
source('lib_r/settings.R')
source('lib_r/data_cleaning_forecast.R')
source('lib_r/prepare_typhoon_input.R')
source('lib_r/prepare_typhoon_input.R')
source('lib_r/track_interpolation.R')
source('lib_r/Read_rainfall_v2.R')
source('lib_r/Model_input_processing.R')
source('lib_r/run_prediction_model.R')
source('lib_r/Make_maps.R')
source('lib_r/Check_landfall_time.R')
ntile_na <- function(x,n){
notna <- !is.na(x)
out <- rep(NA_real_,length(x))
out[notna] <- ntile(x[notna],n)
return(out)
}
wind_input_processing<-function(TRACK_DATA,my_track,Typhoon_stormname){
###################### Model_input_processing ##############
#generate tack with smaller time steps
my_track <- my_track
Typhoon_stormname<-Typhoon_stormname
grid_points_adm3<-grid_points_adm3 # %>% filter(gridid==pcod_SB)
TRACK_DATA1<- TRACK_DATA %>% dplyr::mutate(typhoon = paste0(TRACK_DATA$STORMNAME,substr(TRACK_DATA$YYYYMMDDHH, 1, 4)))
wind_grids <- get_grid_winds(hurr_track=TRACK_DATA1, grid_df=grid_points_adm3, tint = 3,gust_duration_cut = 15, sust_duration_cut = 15)
wind_grids<- wind_grids %>%
dplyr::mutate(typhoon_name=as.vector(TRACK_DATA$STORMNAME)[1],fips = as.numeric(substr(gridid, 3, 11)),vmax_gust_mph=vmax_gust*2.23694,vmax_sust_mph=vmax_sust*2.23694) %>%
dplyr::select(typhoon_name,fips,gridid,vmax_gust,vmax_gust_mph,vmax_sust,vmax_sust_mph,gust_dur,sust_dur,dist_track,glon,glat)
wind_grid<-wind_grids%>%
dplyr::mutate(Mun_Code=gridid)%>%
dplyr::select(-fips,-gridid)
return(wind_grid)
}
grid_points_adm3<-read.csv(paste0(main_directory,"data-raw/grid_points_admin3.csv"), sep=",")
#setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd('C:/Users/ATeklesadik/OneDrive - Rode Kruis/Documents/documents/Typhoon-Impact-based-forecasting-model/data')
Typhoon_events<- readr::read_csv("./Impact data/Typhoon_events_with_impact_data.csv")%>%
dplyr::mutate(International_Name=toupper(International_Name),STORMNAME1=paste0(International_Name,year))
historical_typhoon_wind<- read.csv("./historical_typhoon_wind/ibtracs.WP.list.v04r00.csv")%>%
clean_names()%>%dplyr::mutate(name=toupper(name),
YYYYMMDDHH=format(strptime(iso_time, format = "%Y-%m-%d %H:%M:%S"), '%Y%m%d%H'),
LAT=lat,
LON=lon,
VMAX=usa_wind,#ifelse(dist2land<1,0.84*usa_wind,ifelse(dist2land>50,0.93*usa_wind,0.87*usa_wind)),
season=as.numeric(season),
VMAX2=wmo_wind,#ifelse(!is.na(wmo_wind),wmo_wind,V_usa),
STORMNAME1=paste0(name,season),
STORMNAME=name)%>%
dplyr::select(YYYYMMDDHH,LAT,LON,VMAX,VMAX2,STORMNAME1,STORMNAME,season,nature,landfall,dist2land)%>%
dplyr::filter(season>2005 & STORMNAME1 %in% unique(Typhoon_events$STORMNAME1))
wind_dfs <- list()
for(event_name in (unique(historical_typhoon_wind$STORMNAME1)))
{
TRACK_DATA<-historical_typhoon_wind  %>% filter(STORMNAME==event_name)
TYF<- event_name
my_track <- track_interpolation(TRACK_DATA) %>% dplyr::mutate(Data_Provider=TYF)
#st_write(obj = my_track, dsn = paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_historial_track.gpkg'), layer ='tc_tracks', append = TRUE)
new_data<-wind_input_processing(TRACK_DATA,my_track,event_name)
wind_dfs[[event_name]] <- new_data
}
event_name
TRACK_DATA<-historical_typhoon_wind  %>% filter(STORMNAME==event_name)
TRACK_DATA
event_name
historical_typhoon_wind
TRACK_DATA<-historical_typhoon_wind  %>% filter(STORMNAME1==event_name)
TRACK_DATA
wind_dfs <- list()
for(event_name in (unique(historical_typhoon_wind$STORMNAME1)))
{
TRACK_DATA<-historical_typhoon_wind  %>% filter(STORMNAME1==event_name)
TYF<- event_name
my_track <- track_interpolation(TRACK_DATA) %>% dplyr::mutate(Data_Provider=TYF)
#st_write(obj = my_track, dsn = paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_historial_track.gpkg'), layer ='tc_tracks', append = TRUE)
new_data<-wind_input_processing(TRACK_DATA,my_track,event_name)
wind_dfs[[event_name]] <- new_data
}
TRACK_DATA
TYF<- event_name
TYF
my_track <- track_interpolation(TRACK_DATA) %>% dplyr::mutate(Data_Provider=TYF)
View(TRACK_DATA)
historical_typhoon_wind<- read.csv("./historical_typhoon_wind/ibtracs.WP.list.v04r00.csv")%>%
clean_names()%>%dplyr::mutate(name=toupper(name),
YYYYMMDDHH=format(strptime(iso_time, format = "%Y-%m-%d %H:%M:%S"), '%Y%m%d%H%S'),
LAT=lat,
LON=lon,
VMAX=usa_wind,#ifelse(dist2land<1,0.84*usa_wind,ifelse(dist2land>50,0.93*usa_wind,0.87*usa_wind)),
season=as.numeric(season),
VMAX2=wmo_wind,#ifelse(!is.na(wmo_wind),wmo_wind,V_usa),
STORMNAME1=paste0(name,season),
STORMNAME=name)%>%
dplyr::select(YYYYMMDDHH,LAT,LON,VMAX,VMAX2,STORMNAME1,STORMNAME,season,nature,landfall,dist2land)%>%
dplyr::filter(season>2005 & STORMNAME1 %in% unique(Typhoon_events$STORMNAME1))
wind_dfs <- list()
for(event_name in (unique(historical_typhoon_wind$STORMNAME1)))
{
TRACK_DATA<-historical_typhoon_wind  %>% filter(STORMNAME1==event_name)
TYF<- event_name
my_track <- track_interpolation(TRACK_DATA) %>% dplyr::mutate(Data_Provider=TYF)
#st_write(obj = my_track, dsn = paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_historial_track.gpkg'), layer ='tc_tracks', append = TRUE)
new_data<-wind_input_processing(TRACK_DATA,my_track,event_name)
wind_dfs[[event_name]] <- new_data
}
# Combining files
all_wind <- bind_rows(wind_dfs)
write.csv(all_wind,paste0(main_directory,"data/historical_typhoon_wind/historical_typhoon_windfield.csv"), row.names=F)
head(all_wind)
new_data
wind_dfs <- list()
wind_dfs <- list()
for(event_name in (unique(historical_typhoon_wind$STORMNAME1)))
{
TRACK_DATA<-historical_typhoon_wind  %>% filter(STORMNAME1==event_name)
TYF<- event_name
my_track <- track_interpolation(TRACK_DATA) %>% dplyr::mutate(Data_Provider=TYF)
#st_write(obj = my_track, dsn = paste0(main_directory,'typhoon_infographic/shapes/',Typhoon_stormname, '/',Typhoon_stormname,'_historial_track.gpkg'), layer ='tc_tracks', append = TRUE)
new_data<-wind_input_processing(TRACK_DATA,my_track,event_name)%>% dplyr::mutate(Ty_year=TYF)
wind_dfs[[event_name]] <- new_data
}
# Combining files
all_wind <- bind_rows(wind_dfs)
write.csv(all_wind,paste0(main_directory,"data/historical_typhoon_wind/historical_typhoon_windfield.csv"), row.names=F)
library(readxl)
X180814_construction_materials_of_the_outer_walls_and_roof_by_city_municipality <- read_excel("pre disaster indicators/180814_construction-materials-of-the-outer-walls-and-roof_by-city_municipality.xlsx")
View(X180814_construction_materials_of_the_outer_walls_and_roof_by_city_municipality)
library(readxl)
X180814_construction_materials_of_the_outer_walls_and_roof_by_city_municipality <- read_excel("pre disaster indicators/180814_construction-materials-of-the-outer-walls-and-roof_by-city_municipality.xlsx",
sheet = "Data")
View(X180814_construction_materials_of_the_outer_walls_and_roof_by_city_municipality)
construction_materials_municipality <- read_excel("pre disaster indicators/180814_construction-materials-of-the-outer-walls-and-roof_by-city_municipality.xlsx", sheet = "Data")
construction_materials_municipality[,1]
construction_materials_municipality[1,]
construction_materials_municipality[2,]
